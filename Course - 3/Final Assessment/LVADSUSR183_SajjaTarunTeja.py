# -*- coding: utf-8 -*-
"""Python Final Assessment - 4391.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_IeiUcP6_QebxlKjosM9uC6rPqnWWQhB

## Python Final Assessment
### Sajja Tarun Teja - 4391
"""

# Imports
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Question 1
df = pd.read_csv("/content/Final Dataset - IPL.csv")
#print(df.head())
# about the dataset
print(df.describe())
# Number of columns
print(df.shape) # Shape of the Data set is 74,20 # Rows = 74, Columns = 20
# Total number of data points
print(df.size) # Data Points = 1480
# Data Types of the Column Data
print(df.dtypes)

# Question 2:

# Checking for missing value
x=df.isna().sum()
print(x)
# No NaN values among the given data

y = df.duplicated().count()
print(y)
# Because of the presence of same year in every date of match

# Question 3:
numcol = ["first_ings_score","first_ings_wkts","second_ings_score",
          "second_ings_wkts","margin","highscore"]
ndf = df[numcol]
md = ndf.mean()
medd = ndf.median()
modd = ndf.mode()
randd = ndf.max()-ndf.min()
stdd = ndf.std()
print("Mean of the data ",md) # Mean of the data
print()
print("Median of the data ",medd) # Medain of the data
print()
print("Mode of the data ",modd) # Mode of the data
print()
print("Range of the data ",randd) # Range of the data
print()
print("Standard Deviation of the data ",stdd) # Standard Deviation of the data
print()

df.head()

# Question 4:
def barchart():
  sales_categ = df.groupby('match_winner')['match_id'].count()
  plt.figure(figsize=(8,4))
  sales_categ.plot(kind='bar', color='skyblue')
  plt.title('Total wins per Team')
  plt.xlabel('Teams')
  plt.ylabel('Wins')
  plt.show()

def piechart():
  prof_categ = df['won_by'].value_counts()
  plt.figure(figsize=(6,6))
  prof_categ.plot(kind='pie', autopct='%1.1f%%',labels=df['won_by'])
  plt.ylabel('')
  plt.title('Total wins by')
  plt.show()
def linechart():
  prof_categ = df.groupby('match_winner')['date'].count()
  plt.figure(figsize=(6,6))
  prof_categ.plot(kind='line',marker='o')
  plt.ylabel('')
  plt.xticks(rotation=90)
  plt.grid(True)
  plt.title('Wins accross the date')
  plt.show()

barchart()
print()
piechart()
print()
linechart()

# Question 5:
corr_mat = ndf.corr()
sns.heatmap(corr_mat, annot = True)
'''
* Here it's evident that the first innings score and the second innings score are heavily correlated
  this is because, the second innings score depends on the first one
* And the first inning score is negatively correlated to the first innings wickets score as
it affects the high score affects the highscore
'''

# Question 6:

# Removing Outliers of highscore
Q1 = ndf['highscore'].quantile(0.25) #first quarter
Q3 = ndf['highscore'].quantile(0.75) #rest 3 quarters
iqr = Q3-Q1
lower_bound = Q1-1.5*iqr
upper_bound = Q3+1.5*iqr
dfp1= df[(ndf['highscore']>lower_bound) & (ndf['highscore']<upper_bound)]
print(dfp1)
# We can remove the highscore outlier cause there's only one of this kind

# Removing Outliers of margin
Q1 = ndf['margin'].quantile(0.25) #first quarter
Q3 = ndf['margin'].quantile(0.75) #rest 3 quarters
iqr = Q3-Q1
lower_bound = Q1-1.5*iqr
upper_bound = Q3+1.5*iqr
dfp2= df[(ndf['margin']>lower_bound) & (ndf['margin']<upper_bound)]
print(dfp2)
# This dataframe consists of data that is
# taken off wrt to too high of a margin or too less of a margin

ipl = df
ipl['team_score']=0

for i in range(len(ipl)):
  if ipl['toss_decision'][i]=='Bat':
    ipl['team_score'][i]=ipl['first_ings_score'][i]
  else:
    ipl['team_score'][i]=ipl['second_ings_score'][i]


Q1 = ipl['team_score'].quantile(0.25) #first quarter
Q3 = ipl['team_score'].quantile(0.75) #rest 3 quarters
iqr = Q3-Q1
lower_bound = Q1-1.5*iqr
upper_bound = Q3+1.5*iqr
df_proper= ipl[(ipl['team_score']>lower_bound) & (ipl['team_score']<upper_bound)]
print(df_proper)
# This data frame takes out the outliers from team scores where the choice was to bat

# Question 7
df1 = df[["venue","match_winner"]].value_counts().sort_values(ascending=False)
print(df1.head())
# Top 5 teams to win at Different Venues

# Team vs Individual Score Analysis
venue_score=ipl.groupby('venue').second_ings_score.mean()
ind_score=ipl.groupby('venue').highscore.mean()
plt.plot(venue_score,label='Team')
plt.plot(ind_score,label='Individual')
plt.legend()
plt.xticks(rotation=90)
plt.title("Team Vs Individual Score")

# Question 7 Continued
# Team vs Individual Score analysis stage
stage_score=ipl.groupby('stage').second_ings_score.mean()
ind_score_st=ipl.groupby('stage').highscore.mean()
plt.plot(stage_score,label='Team')
plt.plot(ind_score_st,label='Individual')
plt.legend()
plt.title("Team vs Individual Score")

# Question 8:
# Top 5 player of the matches
df2 = df["player_of_the_match"].value_counts().sort_values(ascending=False)
print(df2.head())
# Top 5 top_scorers of the matches
df3 = df["top_scorer"].value_counts().sort_values(ascending=False)
print(df3.head())
# Top 5 Score by winning teams
df4 = df.sort_values(by="team_score", ascending=False)
df4 = df4[["match_winner","team_score"]]
print(df4.head())

sns.barplot(df2.head())
plt.title("Top 5 Players")
plt.xlabel("Player Name")
plt.ylabel("Count of titles")
plt.xticks(rotation = 45)
plt.show()

sns.barplot(df3.head())
plt.title("Top 5 Scorers")
plt.xlabel("Player Name")
plt.ylabel("Count of titles")
plt.xticks(rotation = 45)
plt.show()

sns.barplot(df4.head())
plt.title("Top 5 Scores by Winning Teams")
plt.xlabel("Team Name")
plt.ylabel("Scores")
plt.xticks(rotation = 45)
plt.show()

df.head()

"""## Question 9

5: We can see from the correlation matrix that there are no redundancies other than the wickets lost number and runs gained by a team which is expected in the game.

6: We can set an additonal column that takes the winning team's score as team_score so that analysis is easier.

6:When we boxplot the team_score, we can see a few outliers. These outliers are then found by finding the upper bound and lower bound of data using IQ range of the values. The corrected data, df_proper is then retrieved by excluding values that come outside these bounds.

7: We can see from the plots that Eden Gardens, Kolkata has the highest wins interms of both teams and individual winnings.

7: In terms of type of match, Playoffs has the highest wins by teams as wells as individuals.

"""

