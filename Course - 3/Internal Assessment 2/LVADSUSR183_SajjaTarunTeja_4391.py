# -*- coding: utf-8 -*-
"""Python IA2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e2SXLzN-MMI_zAFjPdGnCgfbaavm8KO-

## Internal Assessment - 2
### Sajja Tarun Teja - 4391
"""

import numpy as np
import pandas as pd

# Question 1:
import statistics as st
d = np.array([0,1,2,3,4,5,6,7,8,9])
mi = d.min()
ma = d.max()
su = d.sum()
me = d.mean()
std = st.stdev(d)
print("Min of the array {}".format(mi))
print("Max of the array {}".format(ma))
print("Sum of the array {}".format(su))
print("Mean of the array {}".format(me))
print("Standard Deviation of the array {}".format(std))

# Question 2
hd = np.array([[160, 70, 30],
                        [165, 65, 35],
                        [170, 75, 40]])
nd = np.random.normal(0,1, size=(3,3))
hdn = ((hd-hd.mean()))
x = st.stdev(hd)
hdn = hdn/(st.stdev(hd))
hdn = hdn*nd
print(hdn.mean())

# Question 3
studata = np.array([[60, 70, 90,85],
                    [65, -1, 45,50],
                    [70, 75, 40, -1],
                    [35, 60, 50, 65]])
def avg(d):
  res = []
  for i in d:
    if -1 not in i:
      res.append(i.mean())
    else:
      ni = []
      for j in i:
        if j!=-1:
          ni.append(j)
      res.append(np.array(ni).mean())
  return res

avg(studata)

# Question 4:
tmp = np.linspace(15,25,24)
print(tmp)
print(tmp.size)

# Question 5:
dcp = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
df1 = pd.DataFrame(dcp)
mv5 = df1.rolling(5).mean()
print(mv5)
print("Here the first 5 values are zeros as the window is of lenght 5")
print("We can replace them with zeros for comfort")
print(mv5.fillna(0))

# Question 6
a = np.random.normal(0,1, size=(100,2))

# Question 7
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
detpm = np.linalg.det(properties_matrix)
detpm

# Question 8
nn = np.random.randint(0,9,size=(3,3))

# Question 9:
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
df = pd.DataFrame(data)
print(df.head())
ndf = df[df["Age"]>45]
ndf = ndf[ndf["Department"]!="HR"]
ndf = ndf[["Name","City"]]
print(ndf)

# Question 10
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}

ddf = pd.DataFrame(data)
ddf.groupby(["Department","Salesperson"]).Sales.mean()

# Question 11:
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]}

ddf = pd.DataFrame(data)
ndf = ddf.groupby("Category").Price.mean()
print(ndf)

# Question 12
12.
employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}

dfa = pd.DataFrame(employee_data)
dfb = pd.DataFrame(project_data)

ndf = pd.merge(dfa,dfb, on="Employee", how="left")
ndf

# Questoin 13
dfs = pd.read_csv("/content/Q13_sports_team_stats.csv")
print(dfs)

# Question 14
dfc = pd.read_csv("/content/Q14_customer_purchases.csv")
dfc.head()

# Question 15
df15=pd.read_csv("/content/Q15_student_grades.csv")
df15=df15.groupby('Subject')['Grade'].sum()
df15

