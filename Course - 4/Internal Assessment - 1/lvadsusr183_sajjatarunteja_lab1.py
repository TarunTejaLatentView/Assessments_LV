# -*- coding: utf-8 -*-
"""LVADSUSR183_SajjaTarunTeja_Lab1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15nAT2JdKU2dpAWXS0oACJsDjPOFxZUrl
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression, LinearRegression
from sklearn.preprocessing import StandardScaler, MinMaxScaler
from sklearn.metrics import accuracy_score, r2_score, recall_score, confusion_matrix, classification_report

df = pd.read_csv("/content/expenses.csv")
df.head()

df.info()

df.isna().sum()

# Dropping the 16 Nan values from the BMI column
df =df.dropna()

df.duplicated().sum()

# Dropping the duplicate values from the DataFrame
df=df.drop_duplicates()

#Checking for outliers in age
ncol = df.select_dtypes(include = ['float','int'])
sns.boxplot(ncol)
# Outliers in BMI and Charges

sns.boxplot(df.bmi)

sns.boxplot(df.charges)

# Taking out the outliers
df = df[df.bmi<45]
df = df[df.charges<35000]

df.shape

df.head()

df.smoker.unique()

# Checking for correlation
sns.pairplot(df)

ncol = df.select_dtypes(include = ['float','int'])

ncol.shape

edf = df[["sex","smoker"]]
edf = pd.get_dummies(data=edf, columns=["sex","smoker"])

edf = edf.applymap(lambda x: 1 if x>0 else 0)

edf.head()

scaler = MinMaxScaler()
dfs = scaler.fit_transform(ncol[ncol.columns])
dfs = pd.DataFrame(dfs,columns=ncol.columns)

dfs = pd.concat([ncol,edf], axis=1)

corrmat = dfs.corr()
sns.heatmap(corrmat,annot=True)

dfs.head()

dfs.info()

x = dfs[["age","bmi","children","sex_female","sex_male","smoker_no","smoker_yes"]]
y = dfs["charges"]

xtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size=0.2,random_state=24)

model = LinearRegression()
model.fit(xtrain,ytrain)

ypred = model.predict(xtest)

print("r2_score")
print(r2_score(ytest,ypred))

from sklearn.metrics import roc_auc_score

